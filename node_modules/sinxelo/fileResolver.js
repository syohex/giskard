/*jslint node:true, devel: true, plusplus: true, vars: true */
/*global config */

'use strict';

var events = require('events');
var fs = require('fs');
var util = require('util');
var stream = require("stream");

var FileResolver = function (file, ok, ko, destiny) {
    
    this.file = file;
    
    this.ok = ok;
    
    this.ko = ko;
    
    this.destiny = destiny;
};

FileResolver.prototype.check = function () {
    var self = this;
        
    fs.exists(this.file, function (exists) {
        if (exists) {
            self.pipe.call(self);
        } else {
            self.ko.call(self, {code: 404, message: 'Not found', context: {file: self.file}});
        }
    });
};

FileResolver.prototype.pipe = function (destiny) {
    this.stream = fs.createReadStream(this.file);
    this.stream.on("end", this.ok.bind(this.stream));
    
    this.stream.pipe(this.destiny);
};

FileResolver.prototype.resolve = function () {
    this.check();
};

module.exports = FileResolver;